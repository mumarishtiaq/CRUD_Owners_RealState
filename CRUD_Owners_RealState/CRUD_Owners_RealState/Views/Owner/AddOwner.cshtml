@model CRUD_Owners_RealState.Models.Owner

@{
    ViewBag.Title = "AddOwner";
}

<h2>AddOwner</h2>

@Html.Raw(ViewBag.Message)

@using (Html.BeginForm("AddOwner", "Owner", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <h4>Owner</h4>
    <hr />

    @*---OwnerType---*@
    <div class="form-group">
        @Html.LabelFor(model => model.OwnerType, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-9 col-sm-9 col-xs-12">
            @Html.DropDownListFor(model => model.OwnerType, (IEnumerable<SelectListItem>)ViewBag.OwnerTypes, new { @class = "form-control", @id = "ownerTypeDropdown" })
            @Html.ValidationMessageFor(model => model.OwnerType, "", new { @class = "text-danger" })
        </div>
    </div>

    @*---First and LastName---*@
    <div class="row">
        <div class="col-md-6 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-9 col-sm-9 col-xs-12">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", @id = "first-name" } })
                    <small id="first-name-error" class="text-danger"></small>
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-6 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-9 col-sm-9 col-xs-12">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", @id = "last-name" } })
                    <small id="last-name-error" class="text-danger"></small>
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    @*---CNIC---*@

    @*<div id="buyerFields">*@
    <div class="form-group">
        @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
        </div>
    </div>
    @*</div>*@

    @*---Cell No---*@
    <div class="form-group">
        @Html.LabelFor(model => model.CellNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CellNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger" })
        </div>
    </div>


    @*---Gender---*@
    <div class="form-group">
        @Html.LabelFor(model => model.Gender, "Gender", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
        <div class="col-md-9 col-sm-9 col-xs-12">
            <label>
                @Html.RadioButtonFor(model => model.Gender, "Male", new { @id = "gender-male" }) Male
            </label>
            <label>
                @Html.RadioButtonFor(model => model.Gender, "Female", new { @id = "gender-female" }) Female
            </label>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>


    @*---Contact No---*@
    <div class="form-group">
        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
        </div>
    </div>

    @*---Address---*@
    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>


    @*---Image---*@
    <div class="form-group">
        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ImageFile" />
        </div>
    </div>

    @*---SO/DO/WO---*@
    <div class="form-group">
        @Html.LabelFor(model => model.SODOWO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SODOWO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SODOWO, "", new { @class = "text-danger" })
        </div>
    </div>

    @*---DOB---*@
    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>
</div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initial check
            toggleFieldsBasedOnOwnerType();

            // On dropdown change, show/hide fields
            $('#ownerTypeDropdown').change(function () {
                toggleFieldsBasedOnOwnerType();
            });

            function toggleFieldsBasedOnOwnerType() {
                var selectedValue = $('#ownerTypeDropdown').val();
                if (selectedValue == "Buyer") {
                    // Show all fields for Buyer
                    $('#buyerFields').show();
                } else {
                    // Hide Buyer-specific fields for Investor
                    $('#buyerFields').hide();
                }
            }
        });
    </script>
    }
